{"version":3,"sources":["components/DragNDrop.js","App.js","index.js"],"names":["DragNDrop","data","category","useState","list","setList","dragging","setDragging","task","setTask","useEffect","dragItem","useRef","dragItemNode","handleDragEnter","e","targetItem","console","log","current","DI","grpI","key","T","target","oldList","newList","JSON","parse","stringify","items","splice","itemI","localStorage","setItem","handleDragEnd","removeEventListener","getStyles","item","handleSubmit","preventDefault","push","className","arr","numGroups","perGroup","Math","ceil","length","Array","fill","map","_","i","slice","createGroups","style","cat","grp","onDragEnter","onSubmit","type","value","onChange","draggable","onDragStart","addEventListener","setTimeout","handletDragStart","onClick","handleDelete","backgroundColor","border","App","setData","defaultData","getItem","ReactDOM","render","document","getElementById"],"mappings":"wKAsKeA,MApKf,YAAwC,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,SACzB,EAAwBC,mBAASF,GAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEA,EAAwBJ,mBAAS,IAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAEAC,qBAAU,WACRL,EAAQJ,KACP,CAACI,EAASJ,IAEb,IAAMU,EAAWC,mBACXC,EAAeD,mBAafE,EAAkB,SAACC,EAAGC,GAE1BC,QAAQC,IAAI,WAAYP,EAASQ,SACjCF,QAAQC,IAAI,aAAcF,GAC1B,IAAMI,EAAKT,EAASQ,QAAQE,KAA8B,EAAvBV,EAASQ,QAAQG,IAC9CC,EAAIP,EAAWK,KAAwB,EAAjBL,EAAWM,IACnCT,EAAaM,UAAYJ,EAAES,QAE7BnB,GAAQ,SAACoB,GACP,IAAIC,EAAUC,KAAKC,MAAMD,KAAKE,UAAUJ,IAQxC,OAPAC,EAAQH,GAAGO,MAAMC,OACff,EAAWgB,MACX,EACAN,EAAQN,GAAIU,MAAMC,OAAOpB,EAASQ,QAAQa,MAAO,GAAG,IAEtDrB,EAASQ,QAAUH,EACnBiB,aAAaC,QAAQ,OAAQP,KAAKE,UAAUH,IACrCA,MAIPS,EAAgB,SAAhBA,EAAiBpB,GACrBR,GAAY,GACZI,EAASQ,QAAU,KACnBN,EAAaM,QAAQiB,oBAAoB,UAAWD,GACpDtB,EAAaM,QAAU,MAEnBkB,EAAY,SAACC,GACjB,OACE3B,EAASQ,QAAQE,OAASiB,EAAKjB,MAC/BV,EAASQ,QAAQa,QAAUM,EAAKN,OAChCrB,EAASQ,QAAQG,MAAQgB,EAAKhB,IAEvB,mBAEF,YAUHiB,EAAe,SAACxB,GACpBA,EAAEyB,iBACW,KAAThC,GACFH,GAAQ,SAACoB,GACP,IAAIC,EAAUC,KAAKC,MAAMD,KAAKE,UAAUJ,IAIxC,OAHAC,EAAQ,IAAII,MAAMW,KAAKjC,GACvBC,EAAQ,IACRwB,aAAaC,QAAQ,OAAQP,KAAKE,UAAUH,IACrCA,MAeb,OAAItB,EAEA,qBAAKsC,UAAU,cAAf,SAhCiB,SAACC,EAAKC,GACzB,IAAMC,EAAWC,KAAKC,KAAKJ,EAAIK,OAASJ,GACxC,OAAO,IAAIK,MAAML,GACdM,KAAK,IACLC,KAAI,SAACC,EAAGC,GAAJ,OAAUV,EAAIW,MAAMD,EAAIR,GAAWQ,EAAI,GAAKR,MA6B9CU,CAAanD,EAAM,GAAG+C,KAAI,SAACR,EAAKrB,GAAN,OACzB,sBAEEoB,UAAmB,IAARpB,EAAY,YAAc,OACrCkC,MAAe,IAARlC,EAAY,GAAKpB,EAASoB,GAAKkC,MAHxC,UAIW,IAARlC,EAAY,GAAK,oBAAIoB,UAAU,SAAd,SAAwBxC,EAASoB,GAAKmC,MACvDd,EAAIQ,KAAI,SAACO,EAAKrC,GAAN,OACP,sBAEEsC,YACErD,IAAaoD,EAAI5B,MAAMkB,OACnB,SAACjC,GAAD,OAAOD,EAAgBC,EAAG,CAAEM,OAAMW,MAAO,EAAGV,SAC5C,KAENoB,UAAmB,IAARpB,EAAY,qBAAuB,YAPhD,UAQW,IAARA,EACC,sBAAMsC,SAAUrB,EAAhB,SACE,uBACEsB,KAAK,OACLC,MAAOtD,EACPuD,SAAU,SAAChD,GAAD,OAAON,EAAQM,EAAES,OAAOsC,YAItC5D,EAASmB,GAAMoC,IAEhBC,EAAI5B,MAAMqB,KAAI,SAACb,EAAMN,GAAP,OACb,sBACEgC,WAAS,EAETC,YAAa,SAAClD,GAAD,OAhHN,SAACA,EAAGuB,GAC3BrB,QAAQC,IAAI,mBAAoBoB,GAEhCzB,EAAaM,QAAUJ,EAAES,OACzBX,EAAaM,QAAQ+C,iBAAiB,UAAW/B,GACjDxB,EAASQ,QAAUmB,EAEnB6B,YAAW,WACT5D,GAAY,KACX,GAwGe6D,CAAiBrD,EAAG,CAAEM,OAAMW,QAAOV,SAErCqC,YACErD,EACI,SAACS,GACCD,EAAgBC,EAAG,CAAEM,OAAMW,QAAOV,SAEpC,KAENoB,UACEpC,EAAW+B,EAAU,CAAEhB,OAAMW,QAAOV,QAAS,WAdjD,UAgBE,4BAAIgB,IACJ,sBACEI,UAAU,QACV2B,QACE,kBA5DD,SAACrD,GACpB,IAAMO,EAAIP,EAAWK,KAAwB,EAAjBL,EAAWM,IACvCjB,GAAQ,SAACoB,GACP,IAAIC,EAAUC,KAAKC,MAAMD,KAAKE,UAAUJ,IAGxC,OAFAC,EAAQH,GAAGO,MAAMC,OAAOf,EAAWgB,MAAO,GAC1CC,aAAaC,QAAQ,OAAQP,KAAKE,UAAUH,IACrCA,KAuDa4C,CAAa,CACXjD,OACAW,QACAV,SAPR,iBAfKU,QArBJX,QANJC,QA+DN,MC7JLpB,EAAW,CACf,CACEsD,MAAO,CACLe,gBAAiB,mBACjBC,OAAQ,qBAEVf,IAAK,oBAEP,CACED,MAAO,CAAEe,gBAAiB,mBAAoBC,OAAQ,qBACtDf,IAAK,wBAEP,CACED,MAAO,CACLe,gBAAiB,mBACjBC,OAAQ,qBAEVf,IAAK,wBAEP,CACED,MAAO,CAAEe,gBAAiB,mBAAoBC,OAAQ,qBACtDf,IAAK,6BA6BMgB,MAzBf,WACE,MAAwBtE,qBAAxB,mBAAOF,EAAP,KAAayE,EAAb,KACMC,EAAc,WAElB,IADA,IAAMhC,EAAM,GACHU,EAAI,EAAGA,EAAI,GAAIA,IACtBV,EAAIF,KAAK,CAAEX,MAAO,KAEpB,OAAOa,GAST,OAPAjC,qBAAU,WACJuB,aAAa2C,QAAQ,QACvBF,EAAQ/C,KAAKC,MAAMK,aAAa2C,QAAQ,UAExCF,EAAQC,KAET,CAACD,IAEF,qBAAKhC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,cAAC,EAAD,CAAWzC,KAAMA,EAAMC,SAAUA,SC7CzC2E,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.00e74608.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\n\nfunction DragNDrop({ data, category }) {\n  const [list, setList] = useState(data)\n  const [dragging, setDragging] = useState(false)\n\n  const [task, setTask] = useState('')\n\n  useEffect(() => {\n    setList(data)\n  }, [setList, data])\n\n  const dragItem = useRef()\n  const dragItemNode = useRef()\n\n  const handletDragStart = (e, item) => {\n    console.log('Starting to drag', item)\n\n    dragItemNode.current = e.target\n    dragItemNode.current.addEventListener('dragend', handleDragEnd)\n    dragItem.current = item\n\n    setTimeout(() => {\n      setDragging(true)\n    }, 0)\n  }\n  const handleDragEnter = (e, targetItem) => {\n    /* console.log('Entering a drag target', targetItem) */\n    console.log('dragItem', dragItem.current)\n    console.log('targetItem', targetItem)\n    const DI = dragItem.current.grpI + dragItem.current.key * 4\n    const T = targetItem.grpI + targetItem.key * 4\n    if (dragItemNode.current !== e.target) {\n      /* console.log('Target is NOT the same as dragged item') */\n      setList((oldList) => {\n        let newList = JSON.parse(JSON.stringify(oldList))\n        newList[T].items.splice(\n          targetItem.itemI,\n          0,\n          newList[DI].items.splice(dragItem.current.itemI, 1)[0]\n        )\n        dragItem.current = targetItem\n        localStorage.setItem('List', JSON.stringify(newList))\n        return newList\n      })\n    }\n  }\n  const handleDragEnd = (e) => {\n    setDragging(false)\n    dragItem.current = null\n    dragItemNode.current.removeEventListener('dragend', handleDragEnd)\n    dragItemNode.current = null\n  }\n  const getStyles = (item) => {\n    if (\n      dragItem.current.grpI === item.grpI &&\n      dragItem.current.itemI === item.itemI &&\n      dragItem.current.key === item.key\n    ) {\n      return 'dnd-item current'\n    }\n    return 'dnd-item'\n  }\n\n  const createGroups = (arr, numGroups) => {\n    const perGroup = Math.ceil(arr.length / numGroups)\n    return new Array(numGroups)\n      .fill('')\n      .map((_, i) => arr.slice(i * perGroup, (i + 1) * perGroup))\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    if (task !== '') {\n      setList((oldList) => {\n        let newList = JSON.parse(JSON.stringify(oldList))\n        newList[16].items.push(task)\n        setTask('')\n        localStorage.setItem('List', JSON.stringify(newList))\n        return newList\n      })\n    }\n  }\n\n  const handleDelete = (targetItem) => {\n    const T = targetItem.grpI + targetItem.key * 4\n    setList((oldList) => {\n      let newList = JSON.parse(JSON.stringify(oldList))\n      newList[T].items.splice(targetItem.itemI, 1)\n      localStorage.setItem('List', JSON.stringify(newList))\n      return newList\n    })\n  }\n\n  if (list) {\n    return (\n      <div className='drag-n-drop'>\n        {createGroups(list, 5).map((arr, key) => (\n          <div\n            key={key}\n            className={key === 4 ? 'test-side' : 'test'}\n            style={key === 4 ? {} : category[key].style}>\n            {key === 4 ? '' : <h2 className='test-p'>{category[key].cat}</h2>}\n            {arr.map((grp, grpI) => (\n              <div\n                key={grpI}\n                onDragEnter={\n                  dragging && !grp.items.length\n                    ? (e) => handleDragEnter(e, { grpI, itemI: 0, key })\n                    : null\n                }\n                className={key === 4 ? 'dnd-group dnd-side' : 'dnd-group'}>\n                {key === 4 ? (\n                  <form onSubmit={handleSubmit}>\n                    <input\n                      type='text'\n                      value={task}\n                      onChange={(e) => setTask(e.target.value)}\n                    />\n                  </form>\n                ) : (\n                  category[grpI].cat\n                )}\n                {grp.items.map((item, itemI) => (\n                  <div\n                    draggable\n                    key={itemI}\n                    onDragStart={(e) =>\n                      handletDragStart(e, { grpI, itemI, key })\n                    }\n                    onDragEnter={\n                      dragging\n                        ? (e) => {\n                            handleDragEnter(e, { grpI, itemI, key })\n                          }\n                        : null\n                    }\n                    className={\n                      dragging ? getStyles({ grpI, itemI, key }) : 'dnd-item'\n                    }>\n                    <p>{item}</p>\n                    <span\n                      className='badge'\n                      onClick={\n                        () =>\n                          handleDelete({\n                            grpI,\n                            itemI,\n                            key,\n                          }) /* grp.items.splice(item) */\n                      }>\n                      X\n                    </span>\n                  </div>\n                ))}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    )\n  } else {\n    return null\n  }\n}\n\nexport default DragNDrop\n","import React, { useEffect, useState } from 'react'\nimport './App2.css'\n\nimport DragNDrop from './components/DragNDrop'\n\nconst category = [\n  {\n    style: {\n      backgroundColor: 'rgb(255,179,186)',\n      border: '2px solid #FF1930',\n    },\n    cat: 'important/urgent',\n  },\n  {\n    style: { backgroundColor: 'rgb(186,255,201)', border: '2px solid #19FF4B' },\n    cat: 'important/pas urgent',\n  },\n  {\n    style: {\n      backgroundColor: 'rgb(255,223,186)',\n      border: '2px solid #FF9419',\n    },\n    cat: 'pas important/urgent',\n  },\n  {\n    style: { backgroundColor: 'rgb(186,225,255)', border: '2px solid #199CFF' },\n    cat: 'pas important/pas urgent',\n  },\n]\n\nfunction App() {\n  const [data, setData] = useState()\n  const defaultData = () => {\n    const arr = []\n    for (let i = 0; i < 17; i++) {\n      arr.push({ items: [] })\n    }\n    return arr\n  }\n  useEffect(() => {\n    if (localStorage.getItem('List')) {\n      setData(JSON.parse(localStorage.getItem('List')))\n    } else {\n      setData(defaultData)\n    }\n  }, [setData])\n  return (\n    <div className='App'>\n      <header className='App-header'>\n        <DragNDrop data={data} category={category} />\n      </header>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}